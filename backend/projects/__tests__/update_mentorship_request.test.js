'use strict';

// tests for get_sponsorship_info
// Generated by serverless-jest-plugin

const mod = require('./../handler');

const jestPlugin = require('serverless-jest-plugin');
const lambdaWrapper = jestPlugin.lambdaWrapper;
const adder = lambdaWrapper.wrap(mod, { handler: 'create_mentorship_request' });
const wrapped = lambdaWrapper.wrap(mod, { handler: 'update_mentorship_request' });
const AWS = require('aws-sdk');

const create_mentorship ={
    body: JSON.stringify({
        "title": "melon lord",
        "description": "powerrr",
        "category": "backend"
    })
}

describe('update_mentorship_request', () => {
  beforeAll((done) => {
    done();
  });

  it('Correctly updates mentorship', async () => {
    const added = await adder.run(create_mentorship);
    const myId = JSON.parse(added.body).id;

    const update_mentorship ={
        body: JSON.stringify({
            "id": myId,
            "description": "i am powerrr",
        })
    }
    return await wrapped.run(update_mentorship).then(async (response) => {
        expect(response).toBeDefined();
        expect(response).toHaveProperty('statusCode', 200);

        //check if mentorship is updated
        const ddb = new AWS.DynamoDB.DocumentClient();

        const request = {
            TableName: process.env.MENTORSHIP_REQUESTS_TABLE,
            Key:{
                id: myId,
            }
        }

        const result = await ddb.get(request).promise();

        const descrip = "i am powerrr";
        expect(result.Item.description).toMatch(descrip);
        
    });
  });

});


