org: technica
app: platform-projects
service: platform-projects

provider:
  name: aws
  region: us-east-1
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: platform-projects-${self:provider.stage}-layers-deploymentbucket
  environment:
    SENTRY_DSN: ${file(./config/${self:provider.stage}.json):SENTRY_DSN}
    PROJECTS_TABLE: ${file(./config/${self:provider.stage}.json):PROJECTS_TABLE}
    SPONSORS_INFO_TABLE: ${file(./config/${self:provider.stage}.json):SPONSORS_INFO_TABLE}
    MENTORSHIP_REQUESTS_TABLE: ${file(./config/${self:provider.stage}.json):MENTORSHIP_REQUESTS_TABLE}
    DEVPOST_LINK_TABLE: ${file(./config/${self:provider.stage}.json):DEVPOST_LINK_TABLE}
    PROJECT_SUBMISSION_CHECKLIST_ITEMS_TABLE: ${file(./config/${self:provider.stage}.json):PROJECT_SUBMISSION_CHECKLIST_ITEMS_TABLE}
    SLACK_WEBHOOK_SECRET_NAME: ${file(./config/${self:provider.stage}.json):SLACK_WEBHOOK_SECRET_NAME}
    USERS_TABLE: ${file(./config/${self:provider.stage}.json):USERS_TABLE}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - dynamodb:Query
       - dynamodb:Scan
       - dynamodb:GetItem
       - dynamodb:PutItem
       - dynamodb:UpdateItem
       - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*"
    - Effect: "Allow"
      Action:
        - secretsmanager:DescribeSecret
        - secretsmanager:GetSecretValue
      Resource: "arn:aws:secretsmanager:us-east-1:*"

functions:
  add_sponsor:
    handler: handler.add_sponsor
    description: Adds a new sponsor to the database
    events:
      - http: 
          path: add_sponsor
          method: post
          cors: true
  update_sponsor:
    handler: handler.update_sponsor
    description: Updates a sponsor in the database
    events:
      - http:
          path: update_sponsor
          method: post
          cors: true
  delete_sponsor:
    handler: handler.delete_sponsor
    description: Deletes a sponsor in the database
    events:
      - http:
          path: delete_sponsor
          method: post
          cors: true
  get_sponsorship_info:
    handler: handler.get_sponsorship_info
    description: gets sponsorship info from the database
    events:
      - http: 
          path: get_sponsorship_info
          method: get
          cors: true
  get_active_mentorship_requests:
    handler: handler.get_active_mentorship_requests
    description: gets active mentorship requests from the database
    events:
      - http: 
          path: get_active_mentorship_requests
          method: get
          cors: true
  update_mentorship_request:
    handler: handler.update_mentorship_request
    description: update a mentorship request
    events:
      - http: 
          path: update_mentorship_request
          method: post
          cors: true
  get_user_mentorship_requests:
    handler: handler.get_user_mentorship_requests
    description: gets mentorship requests created by a specified user
    events:
      - http: 
          path: get_user_mentorship_requests
          method: get
          cors: true
  create_mentorship_request:
    handler: handler.create_mentorship_request
    description: adds a new mentorship request to the database
    events:
      - http: 
          path: create_mentorship_request
          method: post
          cors: true
  create_project_submission:
    handler: handler.create_project_submission
    description: creates a project submission to devpost
    events:
      - http:
          path: create_project_submission
          method: post
          cors: true
  create_project_checklist_item:
    handler: handler.create_project_checklist_item
    description: adds a new project submission checklist item to the database
    events:
      - http: 
          path: create_project_checklist_item
          method: post
          cors: true
  get_project_checklist_item:
    handler: handler.get_project_checklist_item
    description: gets a project submission checklist item from the database
    events:
      - http: 
          path: get_project_checklist_item
          method: get
          cors: true
  update_project_checklist_item:
    handler: handler.update_project_checklist_item
    description: updates an existing project submission checklist item in the database
    events:
      - http: 
          path: update_project_checklist_item
          method: post
          cors: true
  update_project_submission:
    handler: handler.update_project_submission
    description: updates an existing project submission
    events:
      - http: 
          path: update_project_submission
          method: post
          cors: true
  claim_mentorship_request:
    handler: handler.claim_mentorship_request
    description: claims an open mentorship request
    events:
      - http: 
          path: claim_mentorship_request
          method: post
          cors: true
  lookup_user_slack_id_by_email:
    handler: handler.lookup_user_slack_id_by_email
    description: looks up a user by their email to get their slack ID
    events:
      - http: 
          path: lookup_user_slack_id_by_email
          method: get
          cors: true
plugins:
  - serverless-sentry
  - serverless-jest-plugin
  - serverless-layers

custom:
  sentry:
    dsn: ${file(./config/${self:provider.stage}.json):SENTRY_DSN}
  # see https://github.com/nordcloud/serverless-jest-plugin
  jest:
    collectCoverage: true
  serverless-layers:
    dependenciesPath: ./package.json
