org: technica
app: platform-teams
service: platform-teams

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: platform-teams-${self:provider.stage}-layers-deploymentbucket
  environment:
    SENTRY_DSN: ${file(./config/${self:provider.stage}.json):SENTRY_DSN}
    TEAMS_TABLE: ${file(./config/${self:provider.stage}.json):TEAMS_TABLE}
    INVITES_TABLE: ${file(./config/${self:provider.stage}.json):INVITES_TABLE}
    MEMBERSHIPS_TABLE: ${file(./config/${self:provider.stage}.json):MEMBERSHIPS_TABLE}
    USERS_TABLE: ${file(./config/${self:provider.stage}.json):USERS_TABLE}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - dynamodb:Query
       - dynamodb:Scan
       - dynamodb:GetItem
       - dynamodb:PutItem
       - dynamodb:UpdateItem
       - dynamodb:DeleteItem
       - dynamodb:BatchGetItem
      Resource: "arn:aws:dynamodb:us-east-1:*"


functions:
  create_team:
    handler: handler.create_team
    events:
      - http: 
          path: create_team
          method: post
          cors: true
  invite_to_team:
    handler: handler.invite_to_team
    events:
      - http: 
          path: invite_to_team
          method: post
          cors: true
  join_team:
    handler: handler.join_team
    events:
      - http: 
          path: join_team
          method: post
          cors: true
  leave_team:
    handler: handler.leave_team
    events:
      - http: 
          path: leave_team
          method: post
          cors: true
  get_team_invites:
    handler: handler.get_team_invites
    events:
      - http: 
          path: get_team_invites
          method: get
          cors: true
  get_users_for_team:
    handler: handler.get_users_for_team
    events:
      - http: 
          path: get_users_for_team
          method: get
          cors: true
  get_team_membership_for_user:
    handler: handler.get_team_membership_for_user
    events:
      - http: 
          path: get_team_membership_for_user
          method: get
          cors: true
  get_hackers_invited_to_team:
    handler: handler.get_hackers_invited_to_team
    events:
      - http: 
          path: get_hackers_invited_to_team
          method: get
          cors: true
  get_team_submission:
    handler: handler.get_team_submission
    events:
      - http: 
          path: get_team_submission
          method: get
          cors: true
  update_team_submission:
    handler: handler.update_team_submission
    events:
      - http: 
          path: update_team_submission
          method: post
          cors: true
  add_zoom_link_for_team:
    handler: handler.add_zoom_link_for_team
    events:
      - http:
          path: add_zoom_link_for_team
          method: post
          cors: true
  get_team:
    handler: handler.get_team
    events:
      - http: 
          path: get_team
          method: get
          cors: true
plugins:
  - serverless-sentry
  - serverless-jest-plugin
  - serverless-layers

custom:
  sentry:
    dsn: ${file(./config/${self:provider.stage}.json):SENTRY_DSN}
  # see https://github.com/nordcloud/serverless-jest-plugin
  jest:
    collectCoverage: true
  serverless-layers:
    dependenciesPath: ./package.json